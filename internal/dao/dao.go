// This file is an automatically generated Go binding. Do not modify as any
// change will likely be lost upon the next re-generation!

package dao

import (
	"math/big"
	"strings"

	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
)

// DAOABI is the input ABI used to generate the binding from.
const DAOABI = `[{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"proposals","outputs":[{"name":"recipient","type":"address"},{"name":"amount","type":"uint256"},{"name":"description","type":"string"},{"name":"votingDeadline","type":"uint256"},{"name":"open","type":"bool"},{"name":"proposalPassed","type":"bool"},{"name":"proposalHash","type":"bytes32"},{"name":"proposalDeposit","type":"uint256"},{"name":"newCurator","type":"bool"},{"name":"yea","type":"uint256"},{"name":"nay","type":"uint256"},{"name":"creator","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_amount","type":"uint256"}],"name":"approve","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":true,"inputs":[],"name":"minTokensToCreate","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"rewardAccount","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"daoCreator","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"divisor","outputs":[{"name":"divisor","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"extraBalance","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"_proposalID","type":"uint256"},{"name":"_transactionData","type":"bytes"}],"name":"executeProposal","outputs":[{"name":"_success","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":false,"inputs":[],"name":"unblockMe","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":true,"inputs":[],"name":"totalRewardToken","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"actualBalance","outputs":[{"name":"_actualBalance","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"closingTime","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"allowedRecipients","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferWithoutReward","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":false,"inputs":[],"name":"refund","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"_recipient","type":"address"},{"name":"_amount","type":"uint256"},{"name":"_description","type":"string"},{"name":"_transactionData","type":"bytes"},{"name":"_debatingPeriod","type":"uint256"},{"name":"_newCurator","type":"bool"}],"name":"newProposal","outputs":[{"name":"_proposalID","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"DAOpaidOut","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"minQuorumDivisor","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_newContract","type":"address"}],"name":"newContract","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_recipient","type":"address"},{"name":"_allowed","type":"bool"}],"name":"changeAllowedRecipients","outputs":[{"name":"_success","type":"bool"}],"type":"function"},{"constant":false,"inputs":[],"name":"halveMinQuorum","outputs":[{"name":"_success","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"paidOut","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_proposalID","type":"uint256"},{"name":"_newCurator","type":"address"}],"name":"splitDAO","outputs":[{"name":"_success","type":"bool"}],"type":"function"},{"constant":true,"inputs":[],"name":"DAOrewardAccount","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"proposalDeposit","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"numberOfProposals","outputs":[{"name":"_numberOfProposals","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"lastTimeMinQuorumMet","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_toMembers","type":"bool"}],"name":"retrieveDAOReward","outputs":[{"name":"_success","type":"bool"}],"type":"function"},{"constant":false,"inputs":[],"name":"receiveEther","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":true,"inputs":[],"name":"isFueled","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"_tokenHolder","type":"address"}],"name":"createTokenProxy","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"_proposalID","type":"uint256"}],"name":"getNewDAOAddress","outputs":[{"name":"_newDAO","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"_proposalID","type":"uint256"},{"name":"_supportsProposal","type":"bool"}],"name":"vote","outputs":[{"name":"_voteID","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"getMyReward","outputs":[{"name":"_success","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"rewardToken","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFromWithoutReward","outputs":[{"name":"success","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"remaining","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_proposalDeposit","type":"uint256"}],"name":"changeProposalDeposit","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"blocked","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"curator","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"_proposalID","type":"uint256"},{"name":"_recipient","type":"address"},{"name":"_amount","type":"uint256"},{"name":"_transactionData","type":"bytes"}],"name":"checkProposalCode","outputs":[{"name":"_codeChecksOut","type":"bool"}],"type":"function"},{"constant":true,"inputs":[],"name":"privateCreation","outputs":[{"name":"","type":"address"}],"type":"function"},{"inputs":[{"name":"_curator","type":"address"},{"name":"_daoCreator","type":"address"},{"name":"_proposalDeposit","type":"uint256"},{"name":"_minTokensToCreate","type":"uint256"},{"name":"_closingTime","type":"uint256"},{"name":"_privateCreation","type":"address"}],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":true,"name":"_to","type":"address"},{"indexed":false,"name":"_amount","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_owner","type":"address"},{"indexed":true,"name":"_spender","type":"address"},{"indexed":false,"name":"_amount","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"value","type":"uint256"}],"name":"FuelingToDate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"CreatedToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Refund","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"proposalID","type":"uint256"},{"indexed":false,"name":"recipient","type":"address"},{"indexed":false,"name":"amount","type":"uint256"},{"indexed":false,"name":"newCurator","type":"bool"},{"indexed":false,"name":"description","type":"string"}],"name":"ProposalAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"proposalID","type":"uint256"},{"indexed":false,"name":"position","type":"bool"},{"indexed":true,"name":"voter","type":"address"}],"name":"Voted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"proposalID","type":"uint256"},{"indexed":false,"name":"result","type":"bool"},{"indexed":false,"name":"quorum","type":"uint256"}],"name":"ProposalTallied","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_newCurator","type":"address"}],"name":"NewCurator","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_recipient","type":"address"},{"indexed":false,"name":"_allowed","type":"bool"}],"name":"AllowedRecipientChanged","type":"event"}]`

// DAOBin is the compiled bytecode used for deploying new contracts.
const DAOBin = ``

// DeployDAO deploys a new Ethereum contract, binding an instance of DAO to it.
func DeployDAO(auth *bind.TransactOpts, backend bind.ContractBackend, _curator common.Address, _daoCreator common.Address, _proposalDeposit *big.Int, _minTokensToCreate *big.Int, _closingTime *big.Int, _privateCreation common.Address) (common.Address, *types.Transaction, *DAO, error) {
	parsed, err := abi.JSON(strings.NewReader(DAOABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(DAOBin), backend, _curator, _daoCreator, _proposalDeposit, _minTokensToCreate, _closingTime, _privateCreation)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &DAO{DAOCaller: DAOCaller{contract: contract}, DAOTransactor: DAOTransactor{contract: contract}}, nil
}

// DAO is an auto generated Go binding around an Ethereum contract.
type DAO struct {
	DAOCaller     // Read-only binding to the contract
	DAOTransactor // Write-only binding to the contract
}

func (_d *DAO) Address() common.Address {
	return _d.DAOCaller.Address()
}

// DAOCaller is an auto generated read-only Go binding around an Ethereum contract.
type DAOCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

func (_d *DAOCaller) Address() common.Address {
	return _d.contract.Address()
}

// DAOTransactor is an auto generated write-only Go binding around an Ethereum contract.
type DAOTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// DAOSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type DAOSession struct {
	Contract     *DAO              // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// DAOCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type DAOCallerSession struct {
	Contract *DAOCaller    // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// DAOTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type DAOTransactorSession struct {
	Contract     *DAOTransactor    // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// DAORaw is an auto generated low-level Go binding around an Ethereum contract.
type DAORaw struct {
	Contract *DAO // Generic contract binding to access the raw methods on
}

// DAOCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type DAOCallerRaw struct {
	Contract *DAOCaller // Generic read-only contract binding to access the raw methods on
}

// DAOTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type DAOTransactorRaw struct {
	Contract *DAOTransactor // Generic write-only contract binding to access the raw methods on
}

// NewDAO creates a new instance of DAO, bound to a specific deployed contract.
func NewDAO(address common.Address, backend bind.ContractBackend) (*DAO, error) {
	contract, err := bindDAO(address, backend.(bind.ContractCaller), backend.(bind.ContractTransactor))
	if err != nil {
		return nil, err
	}
	return &DAO{DAOCaller: DAOCaller{contract: contract}, DAOTransactor: DAOTransactor{contract: contract}}, nil
}

// NewDAOCaller creates a new read-only instance of DAO, bound to a specific deployed contract.
func NewDAOCaller(address common.Address, caller bind.ContractCaller) (*DAOCaller, error) {
	contract, err := bindDAO(address, caller, nil)
	if err != nil {
		return nil, err
	}
	return &DAOCaller{contract: contract}, nil
}

// NewDAOTransactor creates a new write-only instance of DAO, bound to a specific deployed contract.
func NewDAOTransactor(address common.Address, transactor bind.ContractTransactor) (*DAOTransactor, error) {
	contract, err := bindDAO(address, nil, transactor)
	if err != nil {
		return nil, err
	}
	return &DAOTransactor{contract: contract}, nil
}

// bindDAO binds a generic wrapper to an already deployed contract.
func bindDAO(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(DAOABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_DAO *DAORaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _DAO.Contract.DAOCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_DAO *DAORaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _DAO.Contract.DAOTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_DAO *DAORaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _DAO.Contract.DAOTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_DAO *DAOCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _DAO.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_DAO *DAOTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _DAO.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_DAO *DAOTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _DAO.Contract.contract.Transact(opts, method, params...)
}

// DAOpaidOut is a free data retrieval call binding the contract method 0x643f7cdd.
//
// Solidity: function DAOpaidOut( address) constant returns(uint256)
func (_DAO *DAOCaller) DAOpaidOut(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "DAOpaidOut", arg0)
	return *ret0, err
}

// DAOpaidOut is a free data retrieval call binding the contract method 0x643f7cdd.
//
// Solidity: function DAOpaidOut( address) constant returns(uint256)
func (_DAO *DAOSession) DAOpaidOut(arg0 common.Address) (*big.Int, error) {
	return _DAO.Contract.DAOpaidOut(&_DAO.CallOpts, arg0)
}

// DAOpaidOut is a free data retrieval call binding the contract method 0x643f7cdd.
//
// Solidity: function DAOpaidOut( address) constant returns(uint256)
func (_DAO *DAOCallerSession) DAOpaidOut(arg0 common.Address) (*big.Int, error) {
	return _DAO.Contract.DAOpaidOut(&_DAO.CallOpts, arg0)
}

// DAOrewardAccount is a free data retrieval call binding the contract method 0x82bf6464.
//
// Solidity: function DAOrewardAccount() constant returns(address)
func (_DAO *DAOCaller) DAOrewardAccount(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "DAOrewardAccount")
	return *ret0, err
}

// DAOrewardAccount is a free data retrieval call binding the contract method 0x82bf6464.
//
// Solidity: function DAOrewardAccount() constant returns(address)
func (_DAO *DAOSession) DAOrewardAccount() (common.Address, error) {
	return _DAO.Contract.DAOrewardAccount(&_DAO.CallOpts)
}

// DAOrewardAccount is a free data retrieval call binding the contract method 0x82bf6464.
//
// Solidity: function DAOrewardAccount() constant returns(address)
func (_DAO *DAOCallerSession) DAOrewardAccount() (common.Address, error) {
	return _DAO.Contract.DAOrewardAccount(&_DAO.CallOpts)
}

// ActualBalance is a free data retrieval call binding the contract method 0x39d1f908.
//
// Solidity: function actualBalance() constant returns(_actualBalance uint256)
func (_DAO *DAOCaller) ActualBalance(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "actualBalance")
	return *ret0, err
}

// ActualBalance is a free data retrieval call binding the contract method 0x39d1f908.
//
// Solidity: function actualBalance() constant returns(_actualBalance uint256)
func (_DAO *DAOSession) ActualBalance() (*big.Int, error) {
	return _DAO.Contract.ActualBalance(&_DAO.CallOpts)
}

// ActualBalance is a free data retrieval call binding the contract method 0x39d1f908.
//
// Solidity: function actualBalance() constant returns(_actualBalance uint256)
func (_DAO *DAOCallerSession) ActualBalance() (*big.Int, error) {
	return _DAO.Contract.ActualBalance(&_DAO.CallOpts)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(_owner address, _spender address) constant returns(remaining uint256)
func (_DAO *DAOCaller) Allowance(opts *bind.CallOpts, _owner common.Address, _spender common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "allowance", _owner, _spender)
	return *ret0, err
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(_owner address, _spender address) constant returns(remaining uint256)
func (_DAO *DAOSession) Allowance(_owner common.Address, _spender common.Address) (*big.Int, error) {
	return _DAO.Contract.Allowance(&_DAO.CallOpts, _owner, _spender)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(_owner address, _spender address) constant returns(remaining uint256)
func (_DAO *DAOCallerSession) Allowance(_owner common.Address, _spender common.Address) (*big.Int, error) {
	return _DAO.Contract.Allowance(&_DAO.CallOpts, _owner, _spender)
}

// AllowedRecipients is a free data retrieval call binding the contract method 0x4df6d6cc.
//
// Solidity: function allowedRecipients( address) constant returns(bool)
func (_DAO *DAOCaller) AllowedRecipients(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "allowedRecipients", arg0)
	return *ret0, err
}

// AllowedRecipients is a free data retrieval call binding the contract method 0x4df6d6cc.
//
// Solidity: function allowedRecipients( address) constant returns(bool)
func (_DAO *DAOSession) AllowedRecipients(arg0 common.Address) (bool, error) {
	return _DAO.Contract.AllowedRecipients(&_DAO.CallOpts, arg0)
}

// AllowedRecipients is a free data retrieval call binding the contract method 0x4df6d6cc.
//
// Solidity: function allowedRecipients( address) constant returns(bool)
func (_DAO *DAOCallerSession) AllowedRecipients(arg0 common.Address) (bool, error) {
	return _DAO.Contract.AllowedRecipients(&_DAO.CallOpts, arg0)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(_owner address) constant returns(balance uint256)
func (_DAO *DAOCaller) BalanceOf(opts *bind.CallOpts, _owner common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "balanceOf", _owner)
	return *ret0, err
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(_owner address) constant returns(balance uint256)
func (_DAO *DAOSession) BalanceOf(_owner common.Address) (*big.Int, error) {
	return _DAO.Contract.BalanceOf(&_DAO.CallOpts, _owner)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(_owner address) constant returns(balance uint256)
func (_DAO *DAOCallerSession) BalanceOf(_owner common.Address) (*big.Int, error) {
	return _DAO.Contract.BalanceOf(&_DAO.CallOpts, _owner)
}

// Blocked is a free data retrieval call binding the contract method 0xe5962195.
//
// Solidity: function blocked( address) constant returns(uint256)
func (_DAO *DAOCaller) Blocked(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "blocked", arg0)
	return *ret0, err
}

// Blocked is a free data retrieval call binding the contract method 0xe5962195.
//
// Solidity: function blocked( address) constant returns(uint256)
func (_DAO *DAOSession) Blocked(arg0 common.Address) (*big.Int, error) {
	return _DAO.Contract.Blocked(&_DAO.CallOpts, arg0)
}

// Blocked is a free data retrieval call binding the contract method 0xe5962195.
//
// Solidity: function blocked( address) constant returns(uint256)
func (_DAO *DAOCallerSession) Blocked(arg0 common.Address) (*big.Int, error) {
	return _DAO.Contract.Blocked(&_DAO.CallOpts, arg0)
}

// CheckProposalCode is a free data retrieval call binding the contract method 0xeceb2945.
//
// Solidity: function checkProposalCode(_proposalID uint256, _recipient address, _amount uint256, _transactionData bytes) constant returns(_codeChecksOut bool)
func (_DAO *DAOCaller) CheckProposalCode(opts *bind.CallOpts, _proposalID *big.Int, _recipient common.Address, _amount *big.Int, _transactionData []byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "checkProposalCode", _proposalID, _recipient, _amount, _transactionData)
	return *ret0, err
}

// CheckProposalCode is a free data retrieval call binding the contract method 0xeceb2945.
//
// Solidity: function checkProposalCode(_proposalID uint256, _recipient address, _amount uint256, _transactionData bytes) constant returns(_codeChecksOut bool)
func (_DAO *DAOSession) CheckProposalCode(_proposalID *big.Int, _recipient common.Address, _amount *big.Int, _transactionData []byte) (bool, error) {
	return _DAO.Contract.CheckProposalCode(&_DAO.CallOpts, _proposalID, _recipient, _amount, _transactionData)
}

// CheckProposalCode is a free data retrieval call binding the contract method 0xeceb2945.
//
// Solidity: function checkProposalCode(_proposalID uint256, _recipient address, _amount uint256, _transactionData bytes) constant returns(_codeChecksOut bool)
func (_DAO *DAOCallerSession) CheckProposalCode(_proposalID *big.Int, _recipient common.Address, _amount *big.Int, _transactionData []byte) (bool, error) {
	return _DAO.Contract.CheckProposalCode(&_DAO.CallOpts, _proposalID, _recipient, _amount, _transactionData)
}

// ClosingTime is a free data retrieval call binding the contract method 0x4b6753bc.
//
// Solidity: function closingTime() constant returns(uint256)
func (_DAO *DAOCaller) ClosingTime(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "closingTime")
	return *ret0, err
}

// ClosingTime is a free data retrieval call binding the contract method 0x4b6753bc.
//
// Solidity: function closingTime() constant returns(uint256)
func (_DAO *DAOSession) ClosingTime() (*big.Int, error) {
	return _DAO.Contract.ClosingTime(&_DAO.CallOpts)
}

// ClosingTime is a free data retrieval call binding the contract method 0x4b6753bc.
//
// Solidity: function closingTime() constant returns(uint256)
func (_DAO *DAOCallerSession) ClosingTime() (*big.Int, error) {
	return _DAO.Contract.ClosingTime(&_DAO.CallOpts)
}

// Curator is a free data retrieval call binding the contract method 0xe66f53b7.
//
// Solidity: function curator() constant returns(address)
func (_DAO *DAOCaller) Curator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "curator")
	return *ret0, err
}

// Curator is a free data retrieval call binding the contract method 0xe66f53b7.
//
// Solidity: function curator() constant returns(address)
func (_DAO *DAOSession) Curator() (common.Address, error) {
	return _DAO.Contract.Curator(&_DAO.CallOpts)
}

// Curator is a free data retrieval call binding the contract method 0xe66f53b7.
//
// Solidity: function curator() constant returns(address)
func (_DAO *DAOCallerSession) Curator() (common.Address, error) {
	return _DAO.Contract.Curator(&_DAO.CallOpts)
}

// DaoCreator is a free data retrieval call binding the contract method 0x149acf9a.
//
// Solidity: function daoCreator() constant returns(address)
func (_DAO *DAOCaller) DaoCreator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "daoCreator")
	return *ret0, err
}

// DaoCreator is a free data retrieval call binding the contract method 0x149acf9a.
//
// Solidity: function daoCreator() constant returns(address)
func (_DAO *DAOSession) DaoCreator() (common.Address, error) {
	return _DAO.Contract.DaoCreator(&_DAO.CallOpts)
}

// DaoCreator is a free data retrieval call binding the contract method 0x149acf9a.
//
// Solidity: function daoCreator() constant returns(address)
func (_DAO *DAOCallerSession) DaoCreator() (common.Address, error) {
	return _DAO.Contract.DaoCreator(&_DAO.CallOpts)
}

// Divisor is a free data retrieval call binding the contract method 0x1f2dc5ef.
//
// Solidity: function divisor() constant returns(divisor uint256)
func (_DAO *DAOCaller) Divisor(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "divisor")
	return *ret0, err
}

// Divisor is a free data retrieval call binding the contract method 0x1f2dc5ef.
//
// Solidity: function divisor() constant returns(divisor uint256)
func (_DAO *DAOSession) Divisor() (*big.Int, error) {
	return _DAO.Contract.Divisor(&_DAO.CallOpts)
}

// Divisor is a free data retrieval call binding the contract method 0x1f2dc5ef.
//
// Solidity: function divisor() constant returns(divisor uint256)
func (_DAO *DAOCallerSession) Divisor() (*big.Int, error) {
	return _DAO.Contract.Divisor(&_DAO.CallOpts)
}

// ExtraBalance is a free data retrieval call binding the contract method 0x21b5b8dd.
//
// Solidity: function extraBalance() constant returns(address)
func (_DAO *DAOCaller) ExtraBalance(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "extraBalance")
	return *ret0, err
}

// ExtraBalance is a free data retrieval call binding the contract method 0x21b5b8dd.
//
// Solidity: function extraBalance() constant returns(address)
func (_DAO *DAOSession) ExtraBalance() (common.Address, error) {
	return _DAO.Contract.ExtraBalance(&_DAO.CallOpts)
}

// ExtraBalance is a free data retrieval call binding the contract method 0x21b5b8dd.
//
// Solidity: function extraBalance() constant returns(address)
func (_DAO *DAOCallerSession) ExtraBalance() (common.Address, error) {
	return _DAO.Contract.ExtraBalance(&_DAO.CallOpts)
}

// GetNewDAOAddress is a free data retrieval call binding the contract method 0xbe7c29c1.
//
// Solidity: function getNewDAOAddress(_proposalID uint256) constant returns(_newDAO address)
func (_DAO *DAOCaller) GetNewDAOAddress(opts *bind.CallOpts, _proposalID *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "getNewDAOAddress", _proposalID)
	return *ret0, err
}

// GetNewDAOAddress is a free data retrieval call binding the contract method 0xbe7c29c1.
//
// Solidity: function getNewDAOAddress(_proposalID uint256) constant returns(_newDAO address)
func (_DAO *DAOSession) GetNewDAOAddress(_proposalID *big.Int) (common.Address, error) {
	return _DAO.Contract.GetNewDAOAddress(&_DAO.CallOpts, _proposalID)
}

// GetNewDAOAddress is a free data retrieval call binding the contract method 0xbe7c29c1.
//
// Solidity: function getNewDAOAddress(_proposalID uint256) constant returns(_newDAO address)
func (_DAO *DAOCallerSession) GetNewDAOAddress(_proposalID *big.Int) (common.Address, error) {
	return _DAO.Contract.GetNewDAOAddress(&_DAO.CallOpts, _proposalID)
}

// IsFueled is a free data retrieval call binding the contract method 0xb7bc2c84.
//
// Solidity: function isFueled() constant returns(bool)
func (_DAO *DAOCaller) IsFueled(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "isFueled")
	return *ret0, err
}

// IsFueled is a free data retrieval call binding the contract method 0xb7bc2c84.
//
// Solidity: function isFueled() constant returns(bool)
func (_DAO *DAOSession) IsFueled() (bool, error) {
	return _DAO.Contract.IsFueled(&_DAO.CallOpts)
}

// IsFueled is a free data retrieval call binding the contract method 0xb7bc2c84.
//
// Solidity: function isFueled() constant returns(bool)
func (_DAO *DAOCallerSession) IsFueled() (bool, error) {
	return _DAO.Contract.IsFueled(&_DAO.CallOpts)
}

// LastTimeMinQuorumMet is a free data retrieval call binding the contract method 0x96d7f3f5.
//
// Solidity: function lastTimeMinQuorumMet() constant returns(uint256)
func (_DAO *DAOCaller) LastTimeMinQuorumMet(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "lastTimeMinQuorumMet")
	return *ret0, err
}

// LastTimeMinQuorumMet is a free data retrieval call binding the contract method 0x96d7f3f5.
//
// Solidity: function lastTimeMinQuorumMet() constant returns(uint256)
func (_DAO *DAOSession) LastTimeMinQuorumMet() (*big.Int, error) {
	return _DAO.Contract.LastTimeMinQuorumMet(&_DAO.CallOpts)
}

// LastTimeMinQuorumMet is a free data retrieval call binding the contract method 0x96d7f3f5.
//
// Solidity: function lastTimeMinQuorumMet() constant returns(uint256)
func (_DAO *DAOCallerSession) LastTimeMinQuorumMet() (*big.Int, error) {
	return _DAO.Contract.LastTimeMinQuorumMet(&_DAO.CallOpts)
}

// MinQuorumDivisor is a free data retrieval call binding the contract method 0x674ed066.
//
// Solidity: function minQuorumDivisor() constant returns(uint256)
func (_DAO *DAOCaller) MinQuorumDivisor(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "minQuorumDivisor")
	return *ret0, err
}

// MinQuorumDivisor is a free data retrieval call binding the contract method 0x674ed066.
//
// Solidity: function minQuorumDivisor() constant returns(uint256)
func (_DAO *DAOSession) MinQuorumDivisor() (*big.Int, error) {
	return _DAO.Contract.MinQuorumDivisor(&_DAO.CallOpts)
}

// MinQuorumDivisor is a free data retrieval call binding the contract method 0x674ed066.
//
// Solidity: function minQuorumDivisor() constant returns(uint256)
func (_DAO *DAOCallerSession) MinQuorumDivisor() (*big.Int, error) {
	return _DAO.Contract.MinQuorumDivisor(&_DAO.CallOpts)
}

// MinTokensToCreate is a free data retrieval call binding the contract method 0x0c3b7b96.
//
// Solidity: function minTokensToCreate() constant returns(uint256)
func (_DAO *DAOCaller) MinTokensToCreate(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "minTokensToCreate")
	return *ret0, err
}

// MinTokensToCreate is a free data retrieval call binding the contract method 0x0c3b7b96.
//
// Solidity: function minTokensToCreate() constant returns(uint256)
func (_DAO *DAOSession) MinTokensToCreate() (*big.Int, error) {
	return _DAO.Contract.MinTokensToCreate(&_DAO.CallOpts)
}

// MinTokensToCreate is a free data retrieval call binding the contract method 0x0c3b7b96.
//
// Solidity: function minTokensToCreate() constant returns(uint256)
func (_DAO *DAOCallerSession) MinTokensToCreate() (*big.Int, error) {
	return _DAO.Contract.MinTokensToCreate(&_DAO.CallOpts)
}

// NumberOfProposals is a free data retrieval call binding the contract method 0x8d7af473.
//
// Solidity: function numberOfProposals() constant returns(_numberOfProposals uint256)
func (_DAO *DAOCaller) NumberOfProposals(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "numberOfProposals")
	return *ret0, err
}

// NumberOfProposals is a free data retrieval call binding the contract method 0x8d7af473.
//
// Solidity: function numberOfProposals() constant returns(_numberOfProposals uint256)
func (_DAO *DAOSession) NumberOfProposals() (*big.Int, error) {
	return _DAO.Contract.NumberOfProposals(&_DAO.CallOpts)
}

// NumberOfProposals is a free data retrieval call binding the contract method 0x8d7af473.
//
// Solidity: function numberOfProposals() constant returns(_numberOfProposals uint256)
func (_DAO *DAOCallerSession) NumberOfProposals() (*big.Int, error) {
	return _DAO.Contract.NumberOfProposals(&_DAO.CallOpts)
}

// PaidOut is a free data retrieval call binding the contract method 0x81f03fcb.
//
// Solidity: function paidOut( address) constant returns(uint256)
func (_DAO *DAOCaller) PaidOut(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "paidOut", arg0)
	return *ret0, err
}

// PaidOut is a free data retrieval call binding the contract method 0x81f03fcb.
//
// Solidity: function paidOut( address) constant returns(uint256)
func (_DAO *DAOSession) PaidOut(arg0 common.Address) (*big.Int, error) {
	return _DAO.Contract.PaidOut(&_DAO.CallOpts, arg0)
}

// PaidOut is a free data retrieval call binding the contract method 0x81f03fcb.
//
// Solidity: function paidOut( address) constant returns(uint256)
func (_DAO *DAOCallerSession) PaidOut(arg0 common.Address) (*big.Int, error) {
	return _DAO.Contract.PaidOut(&_DAO.CallOpts, arg0)
}

// PrivateCreation is a free data retrieval call binding the contract method 0xf8c80d26.
//
// Solidity: function privateCreation() constant returns(address)
func (_DAO *DAOCaller) PrivateCreation(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "privateCreation")
	return *ret0, err
}

// PrivateCreation is a free data retrieval call binding the contract method 0xf8c80d26.
//
// Solidity: function privateCreation() constant returns(address)
func (_DAO *DAOSession) PrivateCreation() (common.Address, error) {
	return _DAO.Contract.PrivateCreation(&_DAO.CallOpts)
}

// PrivateCreation is a free data retrieval call binding the contract method 0xf8c80d26.
//
// Solidity: function privateCreation() constant returns(address)
func (_DAO *DAOCallerSession) PrivateCreation() (common.Address, error) {
	return _DAO.Contract.PrivateCreation(&_DAO.CallOpts)
}

// ProposalDeposit is a free data retrieval call binding the contract method 0x8b15a605.
//
// Solidity: function proposalDeposit() constant returns(uint256)
func (_DAO *DAOCaller) ProposalDeposit(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "proposalDeposit")
	return *ret0, err
}

// ProposalDeposit is a free data retrieval call binding the contract method 0x8b15a605.
//
// Solidity: function proposalDeposit() constant returns(uint256)
func (_DAO *DAOSession) ProposalDeposit() (*big.Int, error) {
	return _DAO.Contract.ProposalDeposit(&_DAO.CallOpts)
}

// ProposalDeposit is a free data retrieval call binding the contract method 0x8b15a605.
//
// Solidity: function proposalDeposit() constant returns(uint256)
func (_DAO *DAOCallerSession) ProposalDeposit() (*big.Int, error) {
	return _DAO.Contract.ProposalDeposit(&_DAO.CallOpts)
}

// Proposals is a free data retrieval call binding the contract method 0x013cf08b.
//
// Solidity: function proposals( uint256) constant returns(recipient address, amount uint256, description string, votingDeadline uint256, open bool, proposalPassed bool, proposalHash bytes32, proposalDeposit uint256, newCurator bool, yea uint256, nay uint256, creator address)
func (_DAO *DAOCaller) Proposals(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Recipient       common.Address
	Amount          *big.Int
	Description     string
	VotingDeadline  *big.Int
	Open            bool
	ProposalPassed  bool
	ProposalHash    [32]byte
	ProposalDeposit *big.Int
	NewCurator      bool
	Yea             *big.Int
	Nay             *big.Int
	Creator         common.Address
}, error) {
	ret := new(struct {
		Recipient       common.Address
		Amount          *big.Int
		Description     string
		VotingDeadline  *big.Int
		Open            bool
		ProposalPassed  bool
		ProposalHash    [32]byte
		ProposalDeposit *big.Int
		NewCurator      bool
		Yea             *big.Int
		Nay             *big.Int
		Creator         common.Address
	})
	out := ret
	err := _DAO.contract.Call(opts, out, "proposals", arg0)
	return *ret, err
}

// Proposals is a free data retrieval call binding the contract method 0x013cf08b.
//
// Solidity: function proposals( uint256) constant returns(recipient address, amount uint256, description string, votingDeadline uint256, open bool, proposalPassed bool, proposalHash bytes32, proposalDeposit uint256, newCurator bool, yea uint256, nay uint256, creator address)
func (_DAO *DAOSession) Proposals(arg0 *big.Int) (struct {
	Recipient       common.Address
	Amount          *big.Int
	Description     string
	VotingDeadline  *big.Int
	Open            bool
	ProposalPassed  bool
	ProposalHash    [32]byte
	ProposalDeposit *big.Int
	NewCurator      bool
	Yea             *big.Int
	Nay             *big.Int
	Creator         common.Address
}, error) {
	return _DAO.Contract.Proposals(&_DAO.CallOpts, arg0)
}

// Proposals is a free data retrieval call binding the contract method 0x013cf08b.
//
// Solidity: function proposals( uint256) constant returns(recipient address, amount uint256, description string, votingDeadline uint256, open bool, proposalPassed bool, proposalHash bytes32, proposalDeposit uint256, newCurator bool, yea uint256, nay uint256, creator address)
func (_DAO *DAOCallerSession) Proposals(arg0 *big.Int) (struct {
	Recipient       common.Address
	Amount          *big.Int
	Description     string
	VotingDeadline  *big.Int
	Open            bool
	ProposalPassed  bool
	ProposalHash    [32]byte
	ProposalDeposit *big.Int
	NewCurator      bool
	Yea             *big.Int
	Nay             *big.Int
	Creator         common.Address
}, error) {
	return _DAO.Contract.Proposals(&_DAO.CallOpts, arg0)
}

// RewardAccount is a free data retrieval call binding the contract method 0x0e708203.
//
// Solidity: function rewardAccount() constant returns(address)
func (_DAO *DAOCaller) RewardAccount(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "rewardAccount")
	return *ret0, err
}

// RewardAccount is a free data retrieval call binding the contract method 0x0e708203.
//
// Solidity: function rewardAccount() constant returns(address)
func (_DAO *DAOSession) RewardAccount() (common.Address, error) {
	return _DAO.Contract.RewardAccount(&_DAO.CallOpts)
}

// RewardAccount is a free data retrieval call binding the contract method 0x0e708203.
//
// Solidity: function rewardAccount() constant returns(address)
func (_DAO *DAOCallerSession) RewardAccount() (common.Address, error) {
	return _DAO.Contract.RewardAccount(&_DAO.CallOpts)
}

// RewardToken is a free data retrieval call binding the contract method 0xcdef91d0.
//
// Solidity: function rewardToken( address) constant returns(uint256)
func (_DAO *DAOCaller) RewardToken(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "rewardToken", arg0)
	return *ret0, err
}

// RewardToken is a free data retrieval call binding the contract method 0xcdef91d0.
//
// Solidity: function rewardToken( address) constant returns(uint256)
func (_DAO *DAOSession) RewardToken(arg0 common.Address) (*big.Int, error) {
	return _DAO.Contract.RewardToken(&_DAO.CallOpts, arg0)
}

// RewardToken is a free data retrieval call binding the contract method 0xcdef91d0.
//
// Solidity: function rewardToken( address) constant returns(uint256)
func (_DAO *DAOCallerSession) RewardToken(arg0 common.Address) (*big.Int, error) {
	return _DAO.Contract.RewardToken(&_DAO.CallOpts, arg0)
}

// TotalRewardToken is a free data retrieval call binding the contract method 0x34145808.
//
// Solidity: function totalRewardToken() constant returns(uint256)
func (_DAO *DAOCaller) TotalRewardToken(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "totalRewardToken")
	return *ret0, err
}

// TotalRewardToken is a free data retrieval call binding the contract method 0x34145808.
//
// Solidity: function totalRewardToken() constant returns(uint256)
func (_DAO *DAOSession) TotalRewardToken() (*big.Int, error) {
	return _DAO.Contract.TotalRewardToken(&_DAO.CallOpts)
}

// TotalRewardToken is a free data retrieval call binding the contract method 0x34145808.
//
// Solidity: function totalRewardToken() constant returns(uint256)
func (_DAO *DAOCallerSession) TotalRewardToken() (*big.Int, error) {
	return _DAO.Contract.TotalRewardToken(&_DAO.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() constant returns(uint256)
func (_DAO *DAOCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _DAO.contract.Call(opts, out, "totalSupply")
	return *ret0, err
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() constant returns(uint256)
func (_DAO *DAOSession) TotalSupply() (*big.Int, error) {
	return _DAO.Contract.TotalSupply(&_DAO.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() constant returns(uint256)
func (_DAO *DAOCallerSession) TotalSupply() (*big.Int, error) {
	return _DAO.Contract.TotalSupply(&_DAO.CallOpts)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(_spender address, _amount uint256) returns(success bool)
func (_DAO *DAOTransactor) Approve(opts *bind.TransactOpts, _spender common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "approve", _spender, _amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(_spender address, _amount uint256) returns(success bool)
func (_DAO *DAOSession) Approve(_spender common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _DAO.Contract.Approve(&_DAO.TransactOpts, _spender, _amount)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(_spender address, _amount uint256) returns(success bool)
func (_DAO *DAOTransactorSession) Approve(_spender common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _DAO.Contract.Approve(&_DAO.TransactOpts, _spender, _amount)
}

// ChangeAllowedRecipients is a paid mutator transaction binding the contract method 0x749f9889.
//
// Solidity: function changeAllowedRecipients(_recipient address, _allowed bool) returns(_success bool)
func (_DAO *DAOTransactor) ChangeAllowedRecipients(opts *bind.TransactOpts, _recipient common.Address, _allowed bool) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "changeAllowedRecipients", _recipient, _allowed)
}

// ChangeAllowedRecipients is a paid mutator transaction binding the contract method 0x749f9889.
//
// Solidity: function changeAllowedRecipients(_recipient address, _allowed bool) returns(_success bool)
func (_DAO *DAOSession) ChangeAllowedRecipients(_recipient common.Address, _allowed bool) (*types.Transaction, error) {
	return _DAO.Contract.ChangeAllowedRecipients(&_DAO.TransactOpts, _recipient, _allowed)
}

// ChangeAllowedRecipients is a paid mutator transaction binding the contract method 0x749f9889.
//
// Solidity: function changeAllowedRecipients(_recipient address, _allowed bool) returns(_success bool)
func (_DAO *DAOTransactorSession) ChangeAllowedRecipients(_recipient common.Address, _allowed bool) (*types.Transaction, error) {
	return _DAO.Contract.ChangeAllowedRecipients(&_DAO.TransactOpts, _recipient, _allowed)
}

// ChangeProposalDeposit is a paid mutator transaction binding the contract method 0xe33734fd.
//
// Solidity: function changeProposalDeposit(_proposalDeposit uint256) returns()
func (_DAO *DAOTransactor) ChangeProposalDeposit(opts *bind.TransactOpts, _proposalDeposit *big.Int) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "changeProposalDeposit", _proposalDeposit)
}

// ChangeProposalDeposit is a paid mutator transaction binding the contract method 0xe33734fd.
//
// Solidity: function changeProposalDeposit(_proposalDeposit uint256) returns()
func (_DAO *DAOSession) ChangeProposalDeposit(_proposalDeposit *big.Int) (*types.Transaction, error) {
	return _DAO.Contract.ChangeProposalDeposit(&_DAO.TransactOpts, _proposalDeposit)
}

// ChangeProposalDeposit is a paid mutator transaction binding the contract method 0xe33734fd.
//
// Solidity: function changeProposalDeposit(_proposalDeposit uint256) returns()
func (_DAO *DAOTransactorSession) ChangeProposalDeposit(_proposalDeposit *big.Int) (*types.Transaction, error) {
	return _DAO.Contract.ChangeProposalDeposit(&_DAO.TransactOpts, _proposalDeposit)
}

// CreateTokenProxy is a paid mutator transaction binding the contract method 0xbaac5300.
//
// Solidity: function createTokenProxy(_tokenHolder address) returns(success bool)
func (_DAO *DAOTransactor) CreateTokenProxy(opts *bind.TransactOpts, _tokenHolder common.Address) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "createTokenProxy", _tokenHolder)
}

// CreateTokenProxy is a paid mutator transaction binding the contract method 0xbaac5300.
//
// Solidity: function createTokenProxy(_tokenHolder address) returns(success bool)
func (_DAO *DAOSession) CreateTokenProxy(_tokenHolder common.Address) (*types.Transaction, error) {
	return _DAO.Contract.CreateTokenProxy(&_DAO.TransactOpts, _tokenHolder)
}

// CreateTokenProxy is a paid mutator transaction binding the contract method 0xbaac5300.
//
// Solidity: function createTokenProxy(_tokenHolder address) returns(success bool)
func (_DAO *DAOTransactorSession) CreateTokenProxy(_tokenHolder common.Address) (*types.Transaction, error) {
	return _DAO.Contract.CreateTokenProxy(&_DAO.TransactOpts, _tokenHolder)
}

// ExecuteProposal is a paid mutator transaction binding the contract method 0x237e9492.
//
// Solidity: function executeProposal(_proposalID uint256, _transactionData bytes) returns(_success bool)
func (_DAO *DAOTransactor) ExecuteProposal(opts *bind.TransactOpts, _proposalID *big.Int, _transactionData []byte) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "executeProposal", _proposalID, _transactionData)
}

// ExecuteProposal is a paid mutator transaction binding the contract method 0x237e9492.
//
// Solidity: function executeProposal(_proposalID uint256, _transactionData bytes) returns(_success bool)
func (_DAO *DAOSession) ExecuteProposal(_proposalID *big.Int, _transactionData []byte) (*types.Transaction, error) {
	return _DAO.Contract.ExecuteProposal(&_DAO.TransactOpts, _proposalID, _transactionData)
}

// ExecuteProposal is a paid mutator transaction binding the contract method 0x237e9492.
//
// Solidity: function executeProposal(_proposalID uint256, _transactionData bytes) returns(_success bool)
func (_DAO *DAOTransactorSession) ExecuteProposal(_proposalID *big.Int, _transactionData []byte) (*types.Transaction, error) {
	return _DAO.Contract.ExecuteProposal(&_DAO.TransactOpts, _proposalID, _transactionData)
}

// GetMyReward is a paid mutator transaction binding the contract method 0xcc9ae3f6.
//
// Solidity: function getMyReward() returns(_success bool)
func (_DAO *DAOTransactor) GetMyReward(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "getMyReward")
}

// GetMyReward is a paid mutator transaction binding the contract method 0xcc9ae3f6.
//
// Solidity: function getMyReward() returns(_success bool)
func (_DAO *DAOSession) GetMyReward() (*types.Transaction, error) {
	return _DAO.Contract.GetMyReward(&_DAO.TransactOpts)
}

// GetMyReward is a paid mutator transaction binding the contract method 0xcc9ae3f6.
//
// Solidity: function getMyReward() returns(_success bool)
func (_DAO *DAOTransactorSession) GetMyReward() (*types.Transaction, error) {
	return _DAO.Contract.GetMyReward(&_DAO.TransactOpts)
}

// HalveMinQuorum is a paid mutator transaction binding the contract method 0x78524b2e.
//
// Solidity: function halveMinQuorum() returns(_success bool)
func (_DAO *DAOTransactor) HalveMinQuorum(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "halveMinQuorum")
}

// HalveMinQuorum is a paid mutator transaction binding the contract method 0x78524b2e.
//
// Solidity: function halveMinQuorum() returns(_success bool)
func (_DAO *DAOSession) HalveMinQuorum() (*types.Transaction, error) {
	return _DAO.Contract.HalveMinQuorum(&_DAO.TransactOpts)
}

// HalveMinQuorum is a paid mutator transaction binding the contract method 0x78524b2e.
//
// Solidity: function halveMinQuorum() returns(_success bool)
func (_DAO *DAOTransactorSession) HalveMinQuorum() (*types.Transaction, error) {
	return _DAO.Contract.HalveMinQuorum(&_DAO.TransactOpts)
}

// NewContract is a paid mutator transaction binding the contract method 0x6837ff1e.
//
// Solidity: function newContract(_newContract address) returns()
func (_DAO *DAOTransactor) NewContract(opts *bind.TransactOpts, _newContract common.Address) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "newContract", _newContract)
}

// NewContract is a paid mutator transaction binding the contract method 0x6837ff1e.
//
// Solidity: function newContract(_newContract address) returns()
func (_DAO *DAOSession) NewContract(_newContract common.Address) (*types.Transaction, error) {
	return _DAO.Contract.NewContract(&_DAO.TransactOpts, _newContract)
}

// NewContract is a paid mutator transaction binding the contract method 0x6837ff1e.
//
// Solidity: function newContract(_newContract address) returns()
func (_DAO *DAOTransactorSession) NewContract(_newContract common.Address) (*types.Transaction, error) {
	return _DAO.Contract.NewContract(&_DAO.TransactOpts, _newContract)
}

// NewProposal is a paid mutator transaction binding the contract method 0x612e45a3.
//
// Solidity: function newProposal(_recipient address, _amount uint256, _description string, _transactionData bytes, _debatingPeriod uint256, _newCurator bool) returns(_proposalID uint256)
func (_DAO *DAOTransactor) NewProposal(opts *bind.TransactOpts, _recipient common.Address, _amount *big.Int, _description string, _transactionData []byte, _debatingPeriod *big.Int, _newCurator bool) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "newProposal", _recipient, _amount, _description, _transactionData, _debatingPeriod, _newCurator)
}

// NewProposal is a paid mutator transaction binding the contract method 0x612e45a3.
//
// Solidity: function newProposal(_recipient address, _amount uint256, _description string, _transactionData bytes, _debatingPeriod uint256, _newCurator bool) returns(_proposalID uint256)
func (_DAO *DAOSession) NewProposal(_recipient common.Address, _amount *big.Int, _description string, _transactionData []byte, _debatingPeriod *big.Int, _newCurator bool) (*types.Transaction, error) {
	return _DAO.Contract.NewProposal(&_DAO.TransactOpts, _recipient, _amount, _description, _transactionData, _debatingPeriod, _newCurator)
}

// NewProposal is a paid mutator transaction binding the contract method 0x612e45a3.
//
// Solidity: function newProposal(_recipient address, _amount uint256, _description string, _transactionData bytes, _debatingPeriod uint256, _newCurator bool) returns(_proposalID uint256)
func (_DAO *DAOTransactorSession) NewProposal(_recipient common.Address, _amount *big.Int, _description string, _transactionData []byte, _debatingPeriod *big.Int, _newCurator bool) (*types.Transaction, error) {
	return _DAO.Contract.NewProposal(&_DAO.TransactOpts, _recipient, _amount, _description, _transactionData, _debatingPeriod, _newCurator)
}

// ReceiveEther is a paid mutator transaction binding the contract method 0xa3912ec8.
//
// Solidity: function receiveEther() returns(bool)
func (_DAO *DAOTransactor) ReceiveEther(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "receiveEther")
}

// ReceiveEther is a paid mutator transaction binding the contract method 0xa3912ec8.
//
// Solidity: function receiveEther() returns(bool)
func (_DAO *DAOSession) ReceiveEther() (*types.Transaction, error) {
	return _DAO.Contract.ReceiveEther(&_DAO.TransactOpts)
}

// ReceiveEther is a paid mutator transaction binding the contract method 0xa3912ec8.
//
// Solidity: function receiveEther() returns(bool)
func (_DAO *DAOTransactorSession) ReceiveEther() (*types.Transaction, error) {
	return _DAO.Contract.ReceiveEther(&_DAO.TransactOpts)
}

// Refund is a paid mutator transaction binding the contract method 0x590e1ae3.
//
// Solidity: function refund() returns()
func (_DAO *DAOTransactor) Refund(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "refund")
}

// Refund is a paid mutator transaction binding the contract method 0x590e1ae3.
//
// Solidity: function refund() returns()
func (_DAO *DAOSession) Refund() (*types.Transaction, error) {
	return _DAO.Contract.Refund(&_DAO.TransactOpts)
}

// Refund is a paid mutator transaction binding the contract method 0x590e1ae3.
//
// Solidity: function refund() returns()
func (_DAO *DAOTransactorSession) Refund() (*types.Transaction, error) {
	return _DAO.Contract.Refund(&_DAO.TransactOpts)
}

// RetrieveDAOReward is a paid mutator transaction binding the contract method 0xa1da2fb9.
//
// Solidity: function retrieveDAOReward(_toMembers bool) returns(_success bool)
func (_DAO *DAOTransactor) RetrieveDAOReward(opts *bind.TransactOpts, _toMembers bool) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "retrieveDAOReward", _toMembers)
}

// RetrieveDAOReward is a paid mutator transaction binding the contract method 0xa1da2fb9.
//
// Solidity: function retrieveDAOReward(_toMembers bool) returns(_success bool)
func (_DAO *DAOSession) RetrieveDAOReward(_toMembers bool) (*types.Transaction, error) {
	return _DAO.Contract.RetrieveDAOReward(&_DAO.TransactOpts, _toMembers)
}

// RetrieveDAOReward is a paid mutator transaction binding the contract method 0xa1da2fb9.
//
// Solidity: function retrieveDAOReward(_toMembers bool) returns(_success bool)
func (_DAO *DAOTransactorSession) RetrieveDAOReward(_toMembers bool) (*types.Transaction, error) {
	return _DAO.Contract.RetrieveDAOReward(&_DAO.TransactOpts, _toMembers)
}

// SplitDAO is a paid mutator transaction binding the contract method 0x82661dc4.
//
// Solidity: function splitDAO(_proposalID uint256, _newCurator address) returns(_success bool)
func (_DAO *DAOTransactor) SplitDAO(opts *bind.TransactOpts, _proposalID *big.Int, _newCurator common.Address) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "splitDAO", _proposalID, _newCurator)
}

// SplitDAO is a paid mutator transaction binding the contract method 0x82661dc4.
//
// Solidity: function splitDAO(_proposalID uint256, _newCurator address) returns(_success bool)
func (_DAO *DAOSession) SplitDAO(_proposalID *big.Int, _newCurator common.Address) (*types.Transaction, error) {
	return _DAO.Contract.SplitDAO(&_DAO.TransactOpts, _proposalID, _newCurator)
}

// SplitDAO is a paid mutator transaction binding the contract method 0x82661dc4.
//
// Solidity: function splitDAO(_proposalID uint256, _newCurator address) returns(_success bool)
func (_DAO *DAOTransactorSession) SplitDAO(_proposalID *big.Int, _newCurator common.Address) (*types.Transaction, error) {
	return _DAO.Contract.SplitDAO(&_DAO.TransactOpts, _proposalID, _newCurator)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(_to address, _value uint256) returns(success bool)
func (_DAO *DAOTransactor) Transfer(opts *bind.TransactOpts, _to common.Address, _value *big.Int) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "transfer", _to, _value)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(_to address, _value uint256) returns(success bool)
func (_DAO *DAOSession) Transfer(_to common.Address, _value *big.Int) (*types.Transaction, error) {
	return _DAO.Contract.Transfer(&_DAO.TransactOpts, _to, _value)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(_to address, _value uint256) returns(success bool)
func (_DAO *DAOTransactorSession) Transfer(_to common.Address, _value *big.Int) (*types.Transaction, error) {
	return _DAO.Contract.Transfer(&_DAO.TransactOpts, _to, _value)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(_from address, _to address, _value uint256) returns(success bool)
func (_DAO *DAOTransactor) TransferFrom(opts *bind.TransactOpts, _from common.Address, _to common.Address, _value *big.Int) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "transferFrom", _from, _to, _value)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(_from address, _to address, _value uint256) returns(success bool)
func (_DAO *DAOSession) TransferFrom(_from common.Address, _to common.Address, _value *big.Int) (*types.Transaction, error) {
	return _DAO.Contract.TransferFrom(&_DAO.TransactOpts, _from, _to, _value)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(_from address, _to address, _value uint256) returns(success bool)
func (_DAO *DAOTransactorSession) TransferFrom(_from common.Address, _to common.Address, _value *big.Int) (*types.Transaction, error) {
	return _DAO.Contract.TransferFrom(&_DAO.TransactOpts, _from, _to, _value)
}

// TransferFromWithoutReward is a paid mutator transaction binding the contract method 0xdbde1988.
//
// Solidity: function transferFromWithoutReward(_from address, _to address, _value uint256) returns(success bool)
func (_DAO *DAOTransactor) TransferFromWithoutReward(opts *bind.TransactOpts, _from common.Address, _to common.Address, _value *big.Int) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "transferFromWithoutReward", _from, _to, _value)
}

// TransferFromWithoutReward is a paid mutator transaction binding the contract method 0xdbde1988.
//
// Solidity: function transferFromWithoutReward(_from address, _to address, _value uint256) returns(success bool)
func (_DAO *DAOSession) TransferFromWithoutReward(_from common.Address, _to common.Address, _value *big.Int) (*types.Transaction, error) {
	return _DAO.Contract.TransferFromWithoutReward(&_DAO.TransactOpts, _from, _to, _value)
}

// TransferFromWithoutReward is a paid mutator transaction binding the contract method 0xdbde1988.
//
// Solidity: function transferFromWithoutReward(_from address, _to address, _value uint256) returns(success bool)
func (_DAO *DAOTransactorSession) TransferFromWithoutReward(_from common.Address, _to common.Address, _value *big.Int) (*types.Transaction, error) {
	return _DAO.Contract.TransferFromWithoutReward(&_DAO.TransactOpts, _from, _to, _value)
}

// TransferWithoutReward is a paid mutator transaction binding the contract method 0x4e10c3ee.
//
// Solidity: function transferWithoutReward(_to address, _value uint256) returns(success bool)
func (_DAO *DAOTransactor) TransferWithoutReward(opts *bind.TransactOpts, _to common.Address, _value *big.Int) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "transferWithoutReward", _to, _value)
}

// TransferWithoutReward is a paid mutator transaction binding the contract method 0x4e10c3ee.
//
// Solidity: function transferWithoutReward(_to address, _value uint256) returns(success bool)
func (_DAO *DAOSession) TransferWithoutReward(_to common.Address, _value *big.Int) (*types.Transaction, error) {
	return _DAO.Contract.TransferWithoutReward(&_DAO.TransactOpts, _to, _value)
}

// TransferWithoutReward is a paid mutator transaction binding the contract method 0x4e10c3ee.
//
// Solidity: function transferWithoutReward(_to address, _value uint256) returns(success bool)
func (_DAO *DAOTransactorSession) TransferWithoutReward(_to common.Address, _value *big.Int) (*types.Transaction, error) {
	return _DAO.Contract.TransferWithoutReward(&_DAO.TransactOpts, _to, _value)
}

// UnblockMe is a paid mutator transaction binding the contract method 0x2632bf20.
//
// Solidity: function unblockMe() returns(bool)
func (_DAO *DAOTransactor) UnblockMe(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "unblockMe")
}

// UnblockMe is a paid mutator transaction binding the contract method 0x2632bf20.
//
// Solidity: function unblockMe() returns(bool)
func (_DAO *DAOSession) UnblockMe() (*types.Transaction, error) {
	return _DAO.Contract.UnblockMe(&_DAO.TransactOpts)
}

// UnblockMe is a paid mutator transaction binding the contract method 0x2632bf20.
//
// Solidity: function unblockMe() returns(bool)
func (_DAO *DAOTransactorSession) UnblockMe() (*types.Transaction, error) {
	return _DAO.Contract.UnblockMe(&_DAO.TransactOpts)
}

// Vote is a paid mutator transaction binding the contract method 0xc9d27afe.
//
// Solidity: function vote(_proposalID uint256, _supportsProposal bool) returns(_voteID uint256)
func (_DAO *DAOTransactor) Vote(opts *bind.TransactOpts, _proposalID *big.Int, _supportsProposal bool) (*types.Transaction, error) {
	return _DAO.contract.Transact(opts, "vote", _proposalID, _supportsProposal)
}

// Vote is a paid mutator transaction binding the contract method 0xc9d27afe.
//
// Solidity: function vote(_proposalID uint256, _supportsProposal bool) returns(_voteID uint256)
func (_DAO *DAOSession) Vote(_proposalID *big.Int, _supportsProposal bool) (*types.Transaction, error) {
	return _DAO.Contract.Vote(&_DAO.TransactOpts, _proposalID, _supportsProposal)
}

// Vote is a paid mutator transaction binding the contract method 0xc9d27afe.
//
// Solidity: function vote(_proposalID uint256, _supportsProposal bool) returns(_voteID uint256)
func (_DAO *DAOTransactorSession) Vote(_proposalID *big.Int, _supportsProposal bool) (*types.Transaction, error) {
	return _DAO.Contract.Vote(&_DAO.TransactOpts, _proposalID, _supportsProposal)
}
